<?xml version="1.0" encoding="utf-8"?>
<ESBMessagePipelineStorage xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Id>c1e7d61e-257e-42b4-b1d5-4ed9430d3d89</Id>
  <Version>a28d48a9-27b6-426c-883a-1eacbc569040</Version>
  <BusinessFlows />
  <ProcessFlows />
  <Description />
  <Name>Scatter Gather</Name>
  <IsSystemObject>false</IsSystemObject>
  <IsPrivate>false</IsPrivate>
  <IsEncrypted>true</IsEncrypted>
  <PipelineBlob>&lt;ESBMessagePipeline xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.neuronesb.com/pipelines/"&gt;&lt;AuditStepAdded&gt;StepNotAdded&lt;/AuditStepAdded&gt;&lt;Category i:nil="true" /&gt;&lt;Description i:nil="true" /&gt;&lt;DisplayAudit&gt;false&lt;/DisplayAudit&gt;&lt;ExceptionStepAdded&gt;StepAdded&lt;/ExceptionStepAdded&gt;&lt;GlobalProperties xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;&lt;d2p1:KeyValueOfstringanyType&gt;&lt;d2p1:Key&gt;NeuronProcess&lt;/d2p1:Key&gt;&lt;d2p1:Value xmlns:d4p1="http://www.w3.org/2001/XMLSchema" i:type="d4p1:string"&gt;Process&lt;/d2p1:Value&gt;&lt;/d2p1:KeyValueOfstringanyType&gt;&lt;/GlobalProperties&gt;&lt;Name&gt;Scatter Gather&lt;/Name&gt;&lt;ProcessType&gt;ProcessFlow&lt;/ProcessType&gt;&lt;Properties xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;ReferencedAssemblies xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" i:nil="true" /&gt;&lt;Steps&gt;&lt;ESBMessagePipelineStep i:type="ExceptionPipelineStepOfESBMessagexAPWb1W4"&gt;&lt;Bindings xmlns:d4p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i1" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;b8ad014e-f3dd-40f7-aa8c-2f5ae1381c14&lt;/Id&gt;&lt;Name&gt;Exception&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;Catch&gt;&lt;Bindings xmlns:d5p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i2" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;8b4dd920-768e-4ed2-b8f3-eaa887725223&lt;/Id&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;Children /&gt;&lt;/Catch&gt;&lt;Finally&gt;&lt;Bindings xmlns:d5p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i3" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;4ea901d6-5678-4752-97c1-112dad7ba375&lt;/Id&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;Children /&gt;&lt;/Finally&gt;&lt;Try&gt;&lt;Bindings xmlns:d5p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i4" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;469bc57f-21a9-4449-9982-3d1a63030379&lt;/Id&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;Children&gt;&lt;ESBMessagePipelineStep xmlns:d6p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d6p1:EsbMessageCSharpCodePipelineStep"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i5" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;3922e770-7d3e-41a6-a6bb-678fa178c5cf&lt;/Id&gt;&lt;Name&gt;Get List of Services&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;BreakPointLines xmlns:d7p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;Code&gt;// *******************************************************************************
// First retrieve the list of services to call.  This could come in via soap headers,
// through an external database call, lookup, or from wherever is appropriate for 
// the scenario.
// In Neuron, each service is represented by a topic, making this essentially a list of 
// topics (or sub topics) to route to, which in turn results in a service call.
// In the last step, we add the list of services as a property to the existing pipeline 
// context so that it can be retrieved in the next pipeline step
// *******************************************************************************
string nameSpace = "urn:xmlns:neuronesb-com:soapheaders";
string prefix = "n";
string serviceList = @"&amp;lt;NeuronServiceList xmlns='urn:xmlns:neuronesb-com:soapheaders'&amp;gt;
	   &amp;lt;services&amp;gt;
		  &amp;lt;service serviceEndpoint='OldMartQuoteService' action='http://schema.neuron.sample/oldmart/broadcast/IQuote/RequestQuote' transform='QuoteRequest_To_OldMartQuote'&amp;gt;&amp;lt;/service&amp;gt;
		  &amp;lt;service serviceEndpoint='NewMartQuoteService' action='http://schema.neuron.sample/newmart/broadcast/IBid/RequestBid' transform='QuoteRequest_To_NewMartQuote'&amp;gt;&amp;lt;/service&amp;gt;
	   &amp;lt;/services&amp;gt;
   &amp;lt;/NeuronServiceList&amp;gt;";
// Load the list of services into an XML Document, add the namespace and retrieve the service nodes,
// persisting the node list into the pipeline's context property
System.Xml.XmlDocument xmlDoc = new System.Xml.XmlDocument();
xmlDoc.LoadXml(serviceList);
System.Xml.XmlNamespaceManager nsMgr = new System.Xml.XmlNamespaceManager(xmlDoc.NameTable);
nsMgr.AddNamespace(prefix, nameSpace);
System.Xml.XmlNodeList nodeList = xmlDoc.SelectNodes("//n:service", nsMgr);
context.Properties.Add("ServiceConfigurations", nodeList);&lt;/Code&gt;&lt;ReferencedAssemblies xmlns:d7p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;&lt;d7p1:string&gt;Neuron&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.NetX&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.Pipelines.Activities, Version=1.0.0.0, Culture=neutral, PublicKeyToken=ed764b6eccb2f6cc&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.Pipelines.Activities2, Version=1.0.0.0, Culture=neutral, PublicKeyToken=ed764b6eccb2f6cc&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Log4netProviderStandard, Version=1.0.0.0, Culture=neutral, PublicKeyToken=ed764b6eccb2f6cc&lt;/d7p1:string&gt;&lt;d7p1:string&gt;mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Collections, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Threading, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Microsoft.CSharp, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d7p1:string&gt;&lt;d7p1:string&gt;mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;/ReferencedAssemblies&gt;&lt;TypeName&gt;Type6add30793d8491a9461f1edfa5de71&lt;/TypeName&gt;&lt;/ESBMessagePipelineStep&gt;&lt;ESBMessagePipelineStep i:type="SplitterPipelineStepOfESBMessageESBMessageu6r3vdAt"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i6" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;94cfbc2f-a92d-4882-bb88-0000ef571225&lt;/Id&gt;&lt;Name&gt;Broadcast and Aggregate&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;Aggregator xmlns:d7p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d7p1:XmlWrapperEsbMessageAggregator"&gt;&lt;WrapperElementName i:nil="true" /&gt;&lt;WrapperElementNamespace i:nil="true" /&gt;&lt;d7p1:WrapperElementName&gt;QuoteCollection&lt;/d7p1:WrapperElementName&gt;&lt;d7p1:WrapperElementNamespace&gt;http://schema.neuron.sample/broadcast/result&lt;/d7p1:WrapperElementNamespace&gt;&lt;/Aggregator&gt;&lt;BatchSize&gt;0&lt;/BatchSize&gt;&lt;Executor i:type="AsynchronousSplitExecutorOfESBMessagexAPWb1W4"&gt;&lt;MaxThreadCount&gt;10&lt;/MaxThreadCount&gt;&lt;/Executor&gt;&lt;FileMessageProperty /&gt;&lt;ForEach&gt;&lt;Bindings xmlns:d8p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i7" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;58e70df4-171f-4f4f-862d-1a6b81c821ff&lt;/Id&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;Children&gt;&lt;ESBMessagePipelineStep i:type="DecisionPipelineStepOfESBMessagexAPWb1W4"&gt;&lt;Bindings xmlns:d10p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i8" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;a01c65b1-1658-4188-b72f-2fc751a57467&lt;/Id&gt;&lt;Name&gt;Requires Transform?&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;Branches&gt;&lt;BranchOfESBMessagexAPWb1W4&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Condition i:type="CodeBranchConditionOfESBMessagexAPWb1W4"&gt;&lt;Code&gt;return context.Data.GetProperty("neuron", "xsltName", "").Length &amp;gt; 1;&lt;/Code&gt;&lt;ReferencedAssemblies xmlns:d13p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;&lt;d13p1:string&gt;Neuron&lt;/d13p1:string&gt;&lt;d13p1:string&gt;Neuron.NetX&lt;/d13p1:string&gt;&lt;d13p1:string&gt;Neuron.Pipelines.Activities&lt;/d13p1:string&gt;&lt;d13p1:string&gt;Neuron.Pipelines.Activities2&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Runtime, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Linq, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Linq.Queryable, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Linq.Expressions, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Xml.ReaderWriter, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Xml.XDocument, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Data.Common, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Runtime.Serialization.Primitives, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Collections.NonGeneric, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Private.Xml, Version=8.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51&lt;/d13p1:string&gt;&lt;d13p1:string&gt;Microsoft.CSharp, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed&lt;/d13p1:string&gt;&lt;d13p1:string&gt;mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Linq.Queryable, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Linq.Queryable, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Linq.Queryable, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;d13p1:string&gt;System.Linq.Queryable, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d13p1:string&gt;&lt;/ReferencedAssemblies&gt;&lt;/Condition&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;EndJoined&gt;false&lt;/EndJoined&gt;&lt;Id /&gt;&lt;Name&gt;Yes&lt;/Name&gt;&lt;Steps&gt;&lt;Bindings xmlns:d13p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i9" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;0e2b5926-5e2f-423d-becd-e288b9b821f2&lt;/Id&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;Children&gt;&lt;ESBMessagePipelineStep xmlns:d14p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d14p1:EsbMessageBodyXslTransformPipelineStep"&gt;&lt;Bindings xmlns:d15p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i10" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;49a4e81f-7ab5-42fe-b623-35217a64ce42&lt;/Id&gt;&lt;Name&gt;Dynamic Transform&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;EnableDocumentFunction&gt;false&lt;/EnableDocumentFunction&gt;&lt;EnableScript&gt;false&lt;/EnableScript&gt;&lt;Parameters /&gt;&lt;TransformXml /&gt;&lt;d14p1:XsltLocation /&gt;&lt;d14p1:XsltName i:nil="true" /&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Children&gt;&lt;/Steps&gt;&lt;/BranchOfESBMessagexAPWb1W4&gt;&lt;BranchOfESBMessagexAPWb1W4&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Condition i:type="AlwaysBranchConditionOfESBMessagexAPWb1W4" /&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;EndJoined&gt;false&lt;/EndJoined&gt;&lt;Id /&gt;&lt;Name&gt;No&lt;/Name&gt;&lt;Steps&gt;&lt;Bindings xmlns:d13p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i11" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;137ecb70-ba75-4c44-980a-0596bf27e709&lt;/Id&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;Children /&gt;&lt;/Steps&gt;&lt;/BranchOfESBMessagexAPWb1W4&gt;&lt;/Branches&gt;&lt;/ESBMessagePipelineStep&gt;&lt;ESBMessagePipelineStep xmlns:d9p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d9p1:EsbMessageServiceEndpointPipelineStep"&gt;&lt;Bindings xmlns:d10p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i12" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;2dfd6d53-a967-4c69-8e49-2cee4e3e26e9&lt;/Id&gt;&lt;Name&gt;Dynamic Service Endpoint&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;d9p1:Category /&gt;&lt;d9p1:Description /&gt;&lt;d9p1:MaxServiceInstances&gt;100&lt;/d9p1:MaxServiceInstances&gt;&lt;d9p1:MessagePattern /&gt;&lt;d9p1:Policy /&gt;&lt;d9p1:ServiceBinding /&gt;&lt;d9p1:ServiceConnector i:nil="true" /&gt;&lt;d9p1:ServiceId /&gt;&lt;d9p1:ServicePoolTimeout&gt;PT1M&lt;/d9p1:ServicePoolTimeout&gt;&lt;d9p1:ServiceUrl /&gt;&lt;d9p1:ThrowExceptionOnFault&gt;false&lt;/d9p1:ThrowExceptionOnFault&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Children&gt;&lt;/ForEach&gt;&lt;MaxThreadCount&gt;10&lt;/MaxThreadCount&gt;&lt;Splitter i:type="CodeSplitterOfESBMessageESBMessageu6r3vdAt"&gt;&lt;Code&gt;//Create a list of process contexts to be filled and returned to the aggregator
List&amp;lt;PipelineContext&amp;lt;ESBMessage&amp;gt;&amp;gt; contexts = new List&amp;lt;PipelineContext&amp;lt;ESBMessage&amp;gt;&amp;gt;();
// Retrieve the list of services previously saved to the process context property bag,
System.Xml.XmlNodeList nodeList = (System.Xml.XmlNodeList)context.Properties["ServiceConfigurations"];
// Loop through the list of services, we'll create a new message from the original, adding the
// topic to the message's property bag so it can later be retrieved in the Steps block.
foreach (System.Xml.XmlNode node in nodeList)
{
    Neuron.NetX.ESBMessage msg = context.Data.Clone(false);
    msg.Header.Action = node.SelectSingleNode("@action").InnerText;
    msg.Header.Service = node.SelectSingleNode("@serviceEndpoint").InnerText;
    // if there is a translation required, retrieve the xslt and set the property
    if (!System.String.IsNullOrEmpty(node.SelectSingleNode("@transform").InnerText))
    {
        msg.SetProperty("neuron", "xsltName", node.SelectSingleNode("@transform").InnerText);
    }

    //create new context for the message
    PipelineContext&amp;lt;ESBMessage&amp;gt; splitContext = new PipelineContext&amp;lt;ESBMessage&amp;gt;(context.Runtime, context.Pipeline, context.Instance, msg);
    splitContext.Properties.Add("__ClientContext", AmbientContext.Get&amp;lt;Neuron.NetX.Channels.ESBClientContext&amp;gt;(splitContext.PartyId));
    // add the context to the result
    contexts.Add(splitContext);
}

// Return the batch of messages to be processed by the STEP block
return contexts;&lt;/Code&gt;&lt;ReferencedAssemblies xmlns:d8p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;&lt;d8p1:string&gt;Neuron&lt;/d8p1:string&gt;&lt;d8p1:string&gt;Neuron.NetX&lt;/d8p1:string&gt;&lt;d8p1:string&gt;Neuron.Pipelines.Activities&lt;/d8p1:string&gt;&lt;d8p1:string&gt;Neuron.Pipelines.Activities2&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Runtime, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Linq, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Linq.Queryable, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Linq.Expressions, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Xml.ReaderWriter, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Xml.XDocument, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Data.Common, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Runtime.Serialization.Primitives, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Collections, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Collections.NonGeneric, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Private.Xml, Version=8.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51&lt;/d8p1:string&gt;&lt;d8p1:string&gt;Microsoft.CSharp, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed&lt;/d8p1:string&gt;&lt;d8p1:string&gt;Neuron.Metabase.Admin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=ed764b6eccb2f6cc&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Runtime.Serialization.Xml, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Private.DataContractSerialization, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.ComponentModel.Primitives, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Collections.Concurrent, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;d8p1:string&gt;System.Linq.Queryable, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d8p1:string&gt;&lt;/ReferencedAssemblies&gt;&lt;/Splitter&gt;&lt;StreamingInput&gt;false&lt;/StreamingInput&gt;&lt;turnOffTrackExecution&gt;false&lt;/turnOffTrackExecution&gt;&lt;/ESBMessagePipelineStep&gt;&lt;ESBMessagePipelineStep i:type="CancelPipelineStepOfESBMessagexAPWb1W4"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" z:Id="i13" xmlns:z="http://schemas.microsoft.com/2003/10/Serialization/" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Id&gt;bb511369-b608-4afa-b24e-974f24473353&lt;/Id&gt;&lt;Name&gt;Return Result&lt;/Name&gt;&lt;Uniquename /&gt;&lt;_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;false&lt;/_x003C_TurnOffAddSegmentExecution_x003E_k__BackingField&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Children&gt;&lt;/Try&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Steps&gt;&lt;/ESBMessagePipeline&gt;</PipelineBlob>
  <IsProcessFlow>true</IsProcessFlow>
</ESBMessagePipelineStorage>